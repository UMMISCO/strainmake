configfile: "config/template_config.yaml"

include: "rules/01_qc.smk"
include: "rules/02_prepocess.smk"
include: "rules/03_assembly.smk"
include: "rules/04_assembly_qc.smk"
include: "rules/05_binning.smk"
include: "rules/06_binning_qc.smk"
include: "rules/07_bins_refinement.smk"

################################################################################
#                                Config options                                #
################################################################################

# get samples name
def read_table(table_path: str):
       """
       This functions returns the list of sample to use in the experiment
       """

       df = pd.read_csv(table_path, sep="\t")

       sample_id_list = df['sample_id'].tolist()

       return set(sample_id_list)

def get_fastq_pair(df, sample_id):
       """
       This function returns the pair of FASTQ corresponding to a sample
       """
       sample_df = df[df['sample_id'] == sample_id]

       forward_read = sample_df[sample_df['type'] == 'R1']['sample'].values[0]
       reverse_read = sample_df[sample_df['type'] == 'R2']['sample'].values[0]

       return (forward_read, reverse_read)

def get_all_fastq(df):
       """
       This function returns the all the FASTQ
       """

       sample = df['sample'].tolist()

       return set(sample)

SAMPLES_TABLE = config['samples']
SAMPLES = read_table(SAMPLES_TABLE)

READS = [1, 2]
ASSEMBLER = config['assembly']['assembler']

################################################################################
#                                   Workflow                                   #
################################################################################

rule all:
        input:
            # QC before preprocessing
            expand("results/01_qc/fastqc/{sample}_{read}_fastqc.html", 
                sample=SAMPLES, read=READS),
            # QC after preprocessing
            expand("results/02_preprocess/fastqc/{sample}_{read}.clean_fastqc.html", 
                sample=SAMPLES, read=READS),
            # assembly part
            expand("results/03_assembly/{assembler}/{sample}/assembly.fa.gz", 
                   assembler=ASSEMBLER, sample=SAMPLES),
            # assembly qc
            expand("results/04_assembly_qc/quast/{assembler}/{sample}/report.html", 
                   assembler=ASSEMBLER, sample=SAMPLES),
            # binning (step 05) + bins qc (step 06)
            expand("results/06_binning_qc/checkm2/samples/{sample}/all_quality_reports.pdf",
                   sample=SAMPLES),
            # bins refinement
            expand("results/07_bins_refinement/binette/{assembler}/{sample}", 
                   assembler=ASSEMBLER, sample=SAMPLES),

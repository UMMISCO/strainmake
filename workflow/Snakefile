configfile: "config/template_config.yaml"

include: "rules/01_qc.smk"
include: "rules/02_prepocess.smk"
include: "rules/03_assembly.smk"
include: "rules/04_assembly_qc.smk"
include: "rules/05_binning.smk"
include: "rules/06_binning_qc.smk"
include: "rules/07_bins_refinement.smk"
include: "rules/08_bins_postprocessing.smk"
include: "rules/09_taxonomic_profiling.smk"

from rules.utils import *

################################################################################
#                                Config options                                #
################################################################################

SAMPLES_TABLE = config['samples']
SAMPLES = read_table(SAMPLES_TABLE)
SAMPLES_DF = pd.read_csv(SAMPLES_TABLE, sep="\t")
FASTQ_FILES = SAMPLES_DF['sample'].tolist()
FASTQ_FILES = [f[:-9] for f in FASTQ_FILES]

READS = [1, 2]
ASSEMBLER = config['assembly']['assembler']

################################################################################
#                                   Workflow                                   #
################################################################################

rule all:
        input:
            # QC before preprocessing
            expand("results/01_qc/fastqc/{fastq_files}/", fastq_files=FASTQ_FILES),
            # QC after preprocessing
            expand("results/02_preprocess/fastqc/{sample}_{read}.clean_fastqc.html", 
                sample=SAMPLES, read=READS),
            # assembly part
            expand("results/03_assembly/{assembler}/{sample}/assembly.fa.gz", 
                   assembler=ASSEMBLER, sample=SAMPLES),
            # assembly qc
            expand("results/04_assembly_qc/quast/{assembler}/{sample}/report.html", 
                   assembler=ASSEMBLER, sample=SAMPLES),
            # binning (step 05) + bins qc (step 06)
            expand("results/06_binning_qc/checkm2/samples/{sample}/all_quality_reports.pdf",
                   sample=SAMPLES),
            # bins refinement
            expand("results/07_bins_refinement/binette/{assembler}/{sample}", 
                   assembler=ASSEMBLER, sample=SAMPLES),
            # bins post-processing
            expand("results/08_bins_postprocessing/gtdb_tk/{assembler}/{sample}", 
                   assembler=ASSEMBLER, sample=SAMPLES),
            expand("results/08_bins_postprocessing/dRep/{assembler}",
                   assembler=ASSEMBLER),
            # taxonomic profiling
            expand("results/09_taxonomic_profiling/metaphlan/{sample}.profile.txt",
                   sample=SAMPLES)